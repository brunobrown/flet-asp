name: Flet ASP - Main

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12", "3.13"]
      fail-fast: false

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install UV
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Verify UV installation
        run: uv --version

      - name: Cache UV dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: uv-${{ runner.os }}-py${{ matrix.python-version }}-${{ hashFiles('uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-py${{ matrix.python-version }}-
            uv-${{ runner.os }}-

      - name: Sync dependencies with UV
        run: |
          uv sync --dev --frozen --no-editable

      - name: Check code formatting with Ruff
        run: |
          uv tool run ruff format --check

      - name: Lint with Ruff
        run: |
          uv tool run ruff check

      - name: Run tests with coverage
        run: |
          uv run pytest -v --cov=flet_asp --cov-report=term-missing --cov-report=xml

      - name: Verify version update in pyproject.toml
        if: github.event_name == 'pull_request'
        run: |
          current_version=$(grep -E '^version = ' pyproject.toml | cut -d'"' -f2)
          echo "Current version in PR: $current_version"

          # Check if version follows semver
          if [[ ! $current_version =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "❌ Version must follow semantic versioning (e.g., 0.2.0)"
            exit 1
          fi

          echo "✅ Version format is valid: $current_version"

      - name: Upload coverage to Codecov
        if: matrix.python-version == '3.13'
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          fail_ci_if_error: false
          verbose: true
